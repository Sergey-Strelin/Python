# Измените код одной-двух решенных ранее задач
# (с прошлых семинаров или домашних работ),
# применив лямбды, filter, map, zip, enumerate, списочные выражения.

# Пример 1. Оригинальное условие задачи:
# Напишите программу, удаляющую из текста все слова, содержащие "абв".
# Например: [‘ПРИВЕТ’, ‘ЗАБВЕНИЕ’, 'ПОКА’] ->[‘ПРИВЕТ’, 'ПОКА’]  

print('Пример 1 - использование lambda и filter для удаления элементов списка \n по условию')
stroka = ['ПРИВЕТ', 'ЗАБВЕНИЕ', 'ПОКА']
stroka = list(filter(lambda x: 'абв' not in x.lower(), stroka))
print(stroka)

#---------------------------------------------
# 2. Оригинальное условие:
# Задайте список из N элементов, заполненных числами
# из промежутка [-N, N]. Найдите произведение элементов
# на указанных позициях.
# Позиции хранятся в файле file.txt в одной строке одно число.
# ВНИМАНИЕ!!!
# В примере показана только часть кода отвечающая за формирование списка от -N до N
print('\n Пример 2 - использование List Comprehension')
number = int(input('Введите целое число больше нуля: '))
massiv = [i for i in range(-number, number+1)]
print ('Числовая шкала ', massiv)

#---------------------------------------------
# 3. Оринaгинальное условие:
# Задайте последовательность чисел.
# Напишите программу, которая выведет список неповторяющихся элементов исходной последовательности.
# [1, 2, 2, 3, 4]  -> [1, 3, 4]

number = [1, 2, 2, 3, 4]
rezult = list(filter(lambda i: number.count(i) == 1, number))
print(rezult)